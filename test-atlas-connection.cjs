const mongoose = require('mongoose');
require('dotenv').config();

async function testAtlasConnection() {
  try {
    console.log('üîó Probando conexi√≥n a MongoDB Atlas...');
    console.log('üìã Project ID:', process.env.MDB_MCP_API_CLIENT_ID);
    console.log('üîë API Key:', process.env.MDB_MCP_API_CLIENT_ID);
    console.log('üîê API Secret:', process.env.MDB_MCP_API_CLIENT_SECRET ? 'Configurado' : 'No configurado');
    console.log('üåê Connection String:', process.env.MONGODB_URI ? 'Configurado' : 'No configurado');
    
    const MONGODB_URI = process.env.MONGODB_URI || 'mongodb+srv://alvaroserr:alvaro123@cluster0.8xqjq.mongodb.net/trastalia?retryWrites=true&w=majority&appName=Cluster0';
    
    console.log('\nüöÄ Conectando a MongoDB Atlas...');
    await mongoose.connect(MONGODB_URI);
    
    console.log('‚úÖ ¬°Conexi√≥n exitosa a MongoDB Atlas!');
    
    // Probar operaciones b√°sicas
    const db = mongoose.connection.db;
    const collections = await db.listCollections().toArray();
    console.log(`üìä Colecciones encontradas: ${collections.length}`);
    
    collections.forEach(collection => {
      console.log(`   - ${collection.name}`);
    });
    
    await mongoose.disconnect();
    console.log('üì° Conexi√≥n cerrada');
    
  } catch (error) {
    console.error('‚ùå Error conectando a MongoDB Atlas:', error.message);
    console.log('\nüîß Posibles soluciones:');
    console.log('   1. Verificar que el cluster est√© activo');
    console.log('   2. Verificar las credenciales de conexi√≥n');
    console.log('   3. Verificar que la IP est√© en la whitelist');
    console.log('   4. Verificar que el usuario tenga permisos');
  }
}

testAtlasConnection();
